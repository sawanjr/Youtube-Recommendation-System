name: Train and Deploy FastAPI App

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  train_model:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'

    - name: Install dependencies
      run: |
        python -m venv .venv
        source .venv/bin/activate
        pip install -r requirements.txt

    - name: Train model
      run: |
        source .venv/bin/activate
        python src/models/train.py

    # Save output graphs as artifacts
    - name: Save Matplotlib output
      if: success() # Only if training is successful
      run: |
        mkdir -p output_graphs
        cp -r path_to_graphs/* output_graphs/ # Replace with your actual graph directory

    - name: Upload Artifacts
      uses: actions/upload-artifact@v3
      with:
        name: training-output
        path: output_graphs/

  deploy_ui:
    needs: train_model
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'

    - name: Install dependencies
      run: |
        python -m venv .venv
        source .venv/bin/activate
        pip install -r requirements.txt

    - name: Run FastAPI app
      run: |
        source .venv/bin/activate
        nohup uvicorn app.main:app --host 0.0.0.0 --port 8000 &

    # Expose FastAPI app
    - name: Expose FastAPI UI
      run: |
        echo "FastAPI is running at http://localhost:8000"
